// --------------------------//
// --------------------------//
// ми не може викликати якусь змінну, або функцію до того як ми її оголосили
// області видимості
// --------------------------//
// --------------------------//
//
// const a = 5;
// if (true) {
//   const b = 10;
//   console.log("Block", b);
// }
// console.log("Global", b);

// constanta a буде викликатися и в глобальному, тому що вона була оголошена зверху
// constanta в не буде викликатися в глобальному, тому  що вона була оголошена в фыгурних скобках, в блочному секторі

// 
// --------------------------//
// --------------------------//
// Цикли
// --------------------------//
//  while () - в дужках повинна бути умова, до коли цей цикл виконується
// i {} тіло циклу, що має видбутися в цьому циклу, в ітерації. ітерація - це одне виконання цього циклу 
// --------------------------//

// while

// let a = 0;

// while (a < 5) {
//   a++;
//   console.log("a", a);
// }

// let a = 0;

// while (a) console.log(a--);

// do while - навпаки. переміщення перевірки
// спочатку буде виконуватися умова, тіло циклу, а вже потім воно буде перевирятися
//

// do {
//   console.log(a);
//   a++;
// } while (a < 5);

//for - () триаргумети повинно бути (початок, умова, і шо повинно відбуватися)
// обов'язково повинно бути ;

// let a = 0;

// for (; a < 3; ) {
//   a++;
//   console.log(a);
// }

// break && continue

// let summ = 0;

// while (true) {
//   let value = +prompt("Введіть число");
//   if (!value) break;

//   summ += value;
// }

// console.log("Summ", summ);

// for (let i = 0; i < 10; i++) {
//   if (i % 2 === 0) continue;
//   console.log(i);
// }

// --------------------------//
// --------------------------//
// масиви
// --------------------------//
// --------------------------//

// let arr = ["Apple", "Orange", "Plum"];

// arr[2] = "Lemon"; - заміняємо

// arr[3] = "Cherry";

// console.log(arr);

// arr.push("Tomat"); - додає елемент в кінець массиву

// console.log(arr);

// arr.pop(); видаляє останній елемент

// console.log(arr);

// arr.shift(); - з першим елементом прауцює (удаляє)

// console.log(arr);

// arr.unshift("Tomat"); - з першим елементом (додає)

// console.log(arr);

// for (let i = 0; i < arr.length; i++) {
//   console.log(arr[i]);
// } - старий метод перебору масиву

// for (let item of arr) {
//   console.log(item);
// } - сучасний метод перебору

// for (let key in arr) {
//   console.log(arr[key]);
// } - перебор до індиксу

// масиви можуть в собі мати ще масиви

// let matrix = [
//   [1, 2, 3],
//   [4, 5, 6],
//   [7, 8, 9],
// ];
// console.log(matrix[1][2]);

// --------------------------//
// --------------------------//
// методи присвоєння
// примітивни копіюються по вел'ю (як з копіюванням листу паперу)
// а скалдні (як массиви ) за засначенням, посиланню
// --------------------------//
// --------------------------//

// let a = 5;
// let b = a;

// a = 10;

// console.log(a);
// console.log(b);

// let arr = [1, 2, 3];
// let arr2 = arr;

// arr.push(4);

// console.log(arr2);

// --------------------------//
// --------------------------//
// методи масиву
// --------------------------//
// --------------------------//

// let arr = ["a", "b", "c", "d", "f"];

// arr.splice(2 (індекс з якого почати), 2 (скільки маємо видалити)); видаляє з середини, через делет не вийде, бо видаляється картинка, а довжина і місце залишається

// console.log(arr);

// console.log(arr.slice(1, 3)); 

// let a = [1, 2, 3];

// console.log(arr.concat(a, "test")); -  створює новий массив і додає ті аргументи які ми йому передаємо

// console.log(arr.indexOf("c" (шо ми шукаємо), 1 (з відкілля шукати))); - пошук в масиві

// console.log(arr.lastIndexOf("c")); -  той сами, тільки шукає с заду на перед

// console.log(arr.includes("c")); - перевірити наявність в цьому масиві, повертає тільки тру чи фолс

// const fruts = [
//   { id: 0, name: "Apple" },
//   { id: 1, name: "Tomat" },
//   { id: 2, name: "Cherry" },
//   { id: 3, name: "Orange" },
// ];

// console.log(fruts.find((item) => item.id === 1)); - шукає по айді.  при пошуку чогось одного

// console.log(fruts.filter((item) => item.id < 2)); - для пошуку по айді, якщо умова співпадає більше ніж одне. як приклад усіх Натащ знайти

// map - метод роботи з масивами. найчастіше для відмальовки використовується

// let result = fruts.map((item) => item.name.length);
// console.log(result);

// let names = "Оля, Юля, Аня, Петя";

// let arr = names.split(", "); - для розділяння (в лапках пишемо як розділяємо, тут через кому і пробіл)

// let newString = arr.join(", "); - для створення строки. усі імена будут в одну строку, в дужках як буде розділятися між собою

// console.log(newString);

// let value = arr.reduce(
//   function (accumulator, item, index, array) {
//     // ...
//   },
//   [initial]
// );

// let arr = [1, 2, 3, 4, 5];

// let red = arr.reduce((summ, item) => summ + item);

// console.log(red);

// let arr = [23, 45, 30];

// let summ = arr.reduce((sum, item) => sum + item) / arr.length;
// console.log(summ);
